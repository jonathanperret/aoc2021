A fish starts at 8.
Every fish is independent: each can be simulated separately to learn how many fish it engenders over X days.
Further, every fish that starts with say 1 will yield the same number of fish after X days.

So we can just count how many of each timer value we have at the start and multiply accordingly.

Further, nothing happens to a fish before it reaches zero.
So, f(1, 80) = f(0, 79) and in general, f(n, X) = f(0, X-n).

So for 80 days e.g., we really only need to now:
  - f(0, 80) = f(0, 80)
  - f(1, 80) = f(0, 79)
  - f(2, 80) = f(0, 78)
  - f(3, 80) = f(0, 77)
  - f(4, 80) = f(0, 76)
  - f(5, 80) = f(0, 75)
  - f(6, 80) = f(0, 74)
  - f(7, 80) = f(0, 73)

We have f(0, X) = f(6, X-1) + f(8, X-1)
                = f(0, X-7) + f(0, X-9)

This sounds a little bit like Ackerman's function ðŸ¤”

In the layout of the sample:
  initial: 8        0
  after 1: 7        6,8
  after 2: 6        5,7
  after 3: 5        4,6
  after 4: 4        3,5
  after 5: 3        2,4
  after 6: 2        1,3
  after 7: 1        0,2
  after 8: 0        6,1,8
  after 9: 0,8      5,0,7
  after 10:6,7,8    4,6,6,8

So termination: f(0, X) = 1 when X <= 0.

f(0, 1) = f(0, 1-7) + f(0, 1-9)
        = f(0, -6) + f(0, -8)
        = 1 + 1
        = 2

f(0, 8) = f(0, 1) + f(0, -1)
        = f(0, -6) + f(0, -8) + 1
        = 1 + 1 + 1
        = 3
