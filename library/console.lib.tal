( dev/console )

%BR { #0a .Console/write DEO }

@print ( addr* -- )
	
  ( test ) LDAk ,&loop JCN
    POP2 RTN
	&loop
		( send ) LDAk .Console/write DEO
		( incr ) INC2
		( loop ) LDAk ,&loop JCN
	POP2

RTN

@print-short ( short* -- )
	LIT '0 .Console/write DEO
	LIT 'x .Console/write DEO
@print-short-no0x
	OVR #04 SFT ,&hex JSR
	SWP #0f AND ,&hex JSR
	DUP #04 SFT ,&hex JSR
	    #0f AND ,&hex JMP

	&hex
	#30 ADD DUP #3a LTH ,&not-alpha JCN
	#27 ADD
	&not-alpha
	.Console/write DEO
RTN

@print-byte ( byte -- )
	LIT '0 .Console/write DEO
	LIT 'x .Console/write DEO
	DUP #04 SFT ,&hex JSR
	    #0f AND ,&hex JMP

	&hex
	#30 ADD DUP #39 GTH #27 MUL ADD .Console/write DEO
RTN

@print-short-decimal ( short -- )
	#00 ,&started STR
	DUP2 #2710 DIV2 DUP2 ,&digit JSR #2710 MUL2 SUB2
	DUP2 #03e8 DIV2 DUP2 ,&digit JSR #03e8 MUL2 SUB2
	DUP2 #0064 DIV2 DUP2 ,&digit JSR #0064 MUL2 SUB2
	DUP2 #000a DIV2 DUP2 ,&digit JSR #000a MUL2 SUB2
	                     ,&digit JSR
	,&started LDR ,&end JCN
	LIT '0 .Console/write DEO
	&end
RTN

	&digit
	NIP
	DUP ,&started LDR ORA #02 JCN
	POP JMP2r
	LIT '0 ADD .Console/write DEO
	#01 ,&started STR
RTN
  [ &started $1 ]

@char-txt "char: 20 $1
@byte-txt "byte: 20 $1
@short-txt "short: 20 $1
@string-txt "string: 20 $1

@is-word 20 "is 20 00
