~library/macros.tal
~library/devices.tal

%STKCHK { ;stkchk JSR2 }

( variables )

|0000

|0100 @program

  P< "dump_list: >P ;test-list ;dump-short-list JSR2
  ( EXPECT dump_list:1 2 345  )

  P< "parse_line: >P S< "455,552 20 "-> 20 "289,718 0a >S ;test-parse-line JSR2
  ( EXPECT parse_line:max=718 455 552 289 718  )

  P< "parse_empty_line: >P S< 0a >S ;test-parse-line JSR2
  ( EXPECT parse_empty_line:max=0  )

  P< "parse_lines: >P ;test-lines-txt ;test-parse-lines JSR2
  ( EXPECT parse_lines:max=718 455 552 289 718 1 2 3 4  )

  P< "init_row: >P
    #cafe ;row #0016 ADD2 STA2
    #0200 ;row STA2
    ;row #000a ;init-row JSR2
    ;row ;dump-short-list JSR2
    ;row #0014 ADD2 LDA2 DBGSHORT POP2
    ;row #0016 ADD2 LDA2 DBGSHORT POP2
  ( EXPECT init_row:0 0 0 0 0 0 0 0 0 0  )
  ( EXPECT 0xffff )
  ( EXPECT 0xcafe )

  STKCHK

  P< "draw_into_row_horizontal: >P S<
    "1,1 "-> "5,1 0a
  >S #0001 ;test-draw-into-row JSR2
  ( EXPECT draw_into_row_horizontal:0 1 1 1 1 1 0 0 0 0  )

  STKCHK

  P< "draw_into_row_horizontal_reversed: >P S<
    "5,1 "-> "1,1 0a
  >S #0001 ;test-draw-into-row JSR2
  ( EXPECT draw_into_row_horizontal_reversed:0 1 1 1 1 1 0 0 0 0  )

  STKCHK

  P< "draw_into_row_horizontal_multi: >P S<
    "1,1 "-> "5,1 0a
    "1,2 "-> "5,2 0a
    "3,1 "-> "6,1 0a
  >S #0001 ;test-draw-into-row JSR2
  ( EXPECT draw_into_row_horizontal_multi:0 1 1 2 2 2 1 0 0 0  )

  STKCHK

  P< "draw_into_row_vertical: >P S<
    "4,0 "-> "4,5 0a
    "2,3 "-> "2,5 0a
    "6,0 "-> "6,1 0a
    "4,3 "-> "4,1 0a
  >S #0002 ;test-draw-into-row JSR2
  ( EXPECT draw_into_row_vertical:0 0 0 0 2 0 0 0 0 0  )

  STKCHK

  P< "count_crossings: >P S< "0,0,1,0,0,2,0,2,0" >S ;test-count-crossings JSR2
  ( EXPECT count_crossings:2 )

  STKCHK

  P< "eval_rows: 0a >P S<
    ( almost a square )
    "0,0 "-> "4,0 0a
    "4,0 "-> "4,4 0a
    "4,4 "-> "1,4 0a
    "0,4 "-> "0,0 0a
  >S ;test-eval-rows JSR2
  ( EXPECT eval_rows: )
  ( EXPECT 21112 )
  ( EXPECT 1...1 )
  ( EXPECT 1...1 )
  ( EXPECT 1...1 )
  ( EXPECT 11112 )
  ( EXPECT 3 )

  STKCHK

  P< ". 0a >P
  ( EXPECT . )

  BRK !

~day5_lib.tal

( s* -- )
@test-parse-line
  ;input STA2
  ;get-byte-from-input ;list ;parse-line JSR2
  P< "max= >P ;print-short-decimal JSR2 SP
  ;list ;dump-short-list JSR2
  RTN

( s* -- )
@test-parse-lines
  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  P< "max= >P ;print-short-decimal JSR2 SP
  ;list ;dump-short-list JSR2
  RTN

( s* rownum -- )
@test-draw-into-row
  STH2 ( s* : rownum )

  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2 POP2

  ;row #000a ;init-row JSR2

  ;row STH2r ;list ;draw-into-row JSR2

  ;row ;dump-short-list JSR2
  RTN

( s* -- )
@test-count-crossings
  ;input STA2
  ;get-byte-from-input ;list ;parse-line JSR2 POP2
  ;list ;count-crossings JSR2
  ;print-short-decimal JSR2 LF
  RTN

( s* -- )
@test-eval-rows
  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  ( max )

  ;list SWP2 ( list* max ) ;eval-rows JSR2
  ( count )
  ;print-short-decimal JSR2 LF
  RTN


( -- b )
@get-byte-from-input
  ;input LDA2 LDA STH
  ;input LDA2 INC2 ;input STA2
  STHr
  RTN

( tries to fills the working stack, to detect stack leaks )
( -- )
@stkchk
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000
  #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 #00

  POP   POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2
  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2  POP2

  RTN


@test-list 00 01 00 02 01 59 ff ff
@test-lines-txt
    "455,552 20 "-> 20 "289,718 0a
    "1,2 20 "-> 20 "3,4 0a
    00
@input $2

@list $1000
@row $1000
