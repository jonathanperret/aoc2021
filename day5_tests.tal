~library/macros.tal
~library/devices.tal

%STKCHK { ;stkchk JSR2 }

( variables )

|0000

|0100 @program

  P< "dump_list: >P ;test-list ;dump-short-list JSR2
  ( EXPECT dump_list:1 2 345  )

  P< "parse_line: >P S< "455,552 20 "-> 20 "289,718 0a >S ;test-parse-line JSR2
  ( EXPECT parse_line:max=718 455 552 289 718  )

  P< "parse_empty_line: >P S< 0a >S ;test-parse-line JSR2
  ( EXPECT parse_empty_line:max=0  )

  P< "parse_lines: >P ;test-lines-txt ;test-parse-lines JSR2
  ( EXPECT parse_lines:max=718 455 552 289 718 1 2 3 4  )

  P< "dump_matrix: 0a >P S<
    01 02 03 04 05
    01 01 01 01 01
    01 01 01 01 01
    01 01 01 01 01
    01 01 01 01 01
  >S #0005 #0005 ;test-dump-matrix JSR2
  ( EXPECT dump_matrix: )
  ( EXPECT 12345 )
  ( EXPECT 11111 )
  ( EXPECT 11111 )
  ( EXPECT 11111 )
  ( EXPECT 11111 )

  STKCHK

  P< "draw_downward_line_into_matrix: 0a >P S<
    "1,1 "-> "3,3 0a
  >S #0005 #0004 ;test-draw-line-into-matrix JSR2
  ( EXPECT draw_downward_line_into_matrix: )
  ( EXPECT ..... )
  ( EXPECT .1... )
  ( EXPECT ..1.. )
  ( EXPECT ...1. )

  STKCHK

  P< "draw_horizontal_line_into_matrix: 0a >P S<
    "1,1 "-> "3,1 0a
  >S #0005 #0004 ;test-draw-line-into-matrix JSR2
  ( EXPECT draw_horizontal_line_into_matrix: )
  ( EXPECT ..... )
  ( EXPECT .111. )
  ( EXPECT ..... )
  ( EXPECT ..... )

  STKCHK

  P< "draw_lines_into_matrix: 0a >P S<
    "1,1 "-> "3,1 0a
    "2,0 "-> "2,3 0a
  >S #0005 #0004 ;test-draw-lines-into-matrix JSR2
  ( EXPECT draw_lines_into_matrix: )
  ( EXPECT ..1.. )
  ( EXPECT .121. )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )

  STKCHK

  P< "draw_upward_line_into_matrix: 0a >P S<
    "1,3 "-> "3,1 0a
  >S #0005 #0004 ;test-draw-line-into-matrix JSR2
  ( EXPECT draw_upward_line_into_matrix: )
  ( EXPECT ..... )
  ( EXPECT ...1. )
  ( EXPECT ..1.. )
  ( EXPECT .1... )

  STKCHK

  P< "draw_vertical_line_into_matrix: 0a >P S<
    "2,0 "-> "2,3 0a
  >S #0005 #0004 ;test-draw-line-into-matrix JSR2
  ( EXPECT draw_vertical_line_into_matrix: )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )

  STKCHK

  P< "draw_vertical_line_into_paged_matrix: 0a >P S<
    "2,0 "-> "2,3 0a
  >S #0005 #0004 ;test-draw-line-into-paged-matrix JSR2
  ( EXPECT draw_vertical_line_into_paged_matrix: )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )
  ( EXPECT ..1.. )

  STKCHK

  P< "count_matrix_crossings: >P S<
    01 01 01
    01 02 01
    01 01 02
  >S #0003 #0003 ;test-count-matrix-crossings JSR2
  ( EXPECT count_matrix_crossings:2 )

  STKCHK

  P< "eval_matrix: 0a >P S<
    ( almost a square )
    "0,0 "-> "4,0 0a
    "4,0 "-> "4,4 0a
    "4,4 "-> "1,4 0a
    "0,4 "-> "0,0 0a
  >S ;test-eval-matrix JSR2
  ( EXPECT eval_matrix: )
  ( EXPECT 21112 )
  ( EXPECT 1...1 )
  ( EXPECT 1...1 )
  ( EXPECT 1...1 )
  ( EXPECT 11112 )
  ( EXPECT 3 )

  STKCHK

  P< "üëç 0a >P
  ( EXPECT üëç )

  BRK !

~day5_lib.tal
~library/test.tal

( s* -- )
@test-parse-line
  ;input STA2
  ;get-byte-from-input ;list ;parse-line JSR2
  P< "max= >P ;print-short-decimal JSR2 SP
  ;list ;dump-short-list JSR2
  RTN

( s* -- )
@test-parse-lines
  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  P< "max= >P ;print-short-decimal JSR2 SP
  ;list ;dump-short-list JSR2
  RTN

( s* w h -- )
@test-draw-line-into-matrix
  STH2 STH2 ( s* : w h )

  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  ( max )
  POP2

  ;matrix STH2rk STH2rk ;clear-matrix JSR2
  ;matrix ;input STA2
  ;get-at-from-input ;set-at-from-input ;list ;draw-line-into-matrix JSR2

  ;get-at-from-input STH2r STH2r ;dump-matrix JSR2
  RTN

( s* w h -- )
@test-draw-lines-into-matrix
  STH2 STH2 ( s* : w h )

  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  ( max )
  POP2

  ;matrix STH2rk STH2rk ;clear-matrix JSR2
  ;matrix ;input STA2
  ;get-at-from-input ;set-at-from-input ;list ;draw-lines-into-matrix JSR2

  ;get-at-from-input STH2r STH2r ;dump-matrix JSR2
  RTN

( s* w h -- )
@test-draw-line-into-paged-matrix
  STH2 STH2 ( s* : w h )

  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  ( max )
  POP2

  ( : w h )
  OVR2r OVR2r STH2r STH2r ( w h : w h ) ;paged-matrix-init JSR2

  ;paged-matrix-get-at ;paged-matrix-set-at ;list ;draw-line-into-matrix JSR2

  ;paged-matrix-get-at STH2r STH2r ;dump-matrix JSR2
  RTN

( s* w h -- )
@test-dump-matrix
  [ ;input-h STA2 ]
  [ ;input-w STA2 ]
  ;input STA2
  ;get-at-from-input [ ;input-w LDA2 ] [ ;input-h LDA2 ] ;dump-matrix JSR2
  RTN

( s* w h -- )
@test-count-matrix-crossings
  [ ;input-h STA2 ]
  [ ;input-w STA2 ]
  ;input STA2

  ;get-at-from-input [ ;input-w LDA2 ] [ ;input-h LDA2 ] ;count-matrix-crossings JSR2
  ;print-short-decimal JSR2 LF
  RTN

( s* -- )
@test-eval-matrix
  ;input STA2
  ;get-byte-from-input ;list ;parse-lines JSR2
  ( max )

  ;list SWP2 ( list* max ) ;eval-matrix JSR2
  ( count )
  ;print-short-decimal JSR2 LF
  RTN

( -- b )
@get-byte-from-input
  ;input LDA2 LDA STH
  ;input LDA2 INC2 ;input STA2
  STHr
  RTN

( x y -- b )
@get-at-from-input
  [ ;input-w LDA2 ] MUL2 ADD2 [ ;input LDA2 ] ADD2 LDA
  RTN

( b x y -- )
@set-at-from-input
  [ ;input-w LDA2 ] MUL2 ADD2 [ ;input LDA2 ] ADD2 STA
  RTN

( w*h must be even )
( matrix* w h -- )
@clear-matrix
  MUL2 2// STH2 ( matrix* : wordcount )
  ( clear matrix )
  &loop
    #0000 OVR2 STA2
    ( advance pointer )
    #0002 ADD2
    ( matrix* : count )
    DEC2r STH2rk #0000 NEQ2 ,&loop JCN
  ( matrix* : count )
  POP2r
  POP2
  RTN

@test-list 00 01 00 02 01 59 ff ff
@test-lines-txt
    "455,552 20 "-> 20 "289,718 0a
    "1,2 20 "-> 20 "3,4 0a
    00
@input $2
@input-w $2
@input-h $2

@list $1000
@matrix $1000
