~library/macros.tal
~library/devices.tal

( variables )

|0000

( init )

|0100 @program
  ;on-arg-char .Console/vector DEO2
  BRK !

@on-arg-char
  .Console/read DEI ( char )
  DUP #0a EQU ,&complete JCN
  ;argv #00 ,&argptr LDR ADD2 STA
  ,&argptr LDR INC ,&argptr STR
  BRK !

  &complete
  POP

  ;arg-received JMP2

  &argptr $1

@argv        $20

%COUNT { #0064 }
( arg is in @argv )
@arg-received
  LIT ': EMIT
  ;argv ;print JSR2
  LF

  #0000 [ ;&best-mag STA2 ]

  #0000 COUNT DO
    #0000 COUNT DO
      ( i j )
      OVR2 DBGSHORTDECn SP POP2 DBGSHORTDEC
      OVR2 ;&sn1 ;read-nth JSR2
      DUP2 ;&sn2 ;read-nth JSR2

      ;&sn1 ;snailcalc/print JSR2 LF
      ;&sn2 ;snailcalc/print JSR2 LF

      ;&sn1 ;&sn2 ;snailcalc/add JSR2
      ;&sn1 ;snailcalc/reduce JSR2
      P< "mag= >P ;&sn1 ;snailcalc/magnitude JSR2 DUP2 ;print-short-decimal JSR2
      DUP2 [ ;&best-mag LDA2 ] LTH2 ,&not-new-best JCN
        LIT '! EMIT
        DUP2 [ ;&best-mag STA2 ]
      &not-new-best
      LF
      POP2
    LOOP
  LOOP

  P< "best-mag= >P [ ;&best-mag LDA2 ] ;print-short-decimal JSR2 LF

  BRK

  [ &sn1 $500 &sn2 $500 &best-mag $2 ]

( n sn* -- )
@read-nth
  [ ;&snp STA2 ]
  ;open-file JSR2
  #0000 SWP2 INC2 DO
    ;read-byte [ ;&snp LDA2 ] ;snailcalc/parse JSR2
  LOOP
  RTN
  [ &snp $2 ]

@open-file
  ;argv .File/name DEO2
  #0001 .File/length DEO2
  RTN

( -- next-byte )
@read-byte
  #00 ;&byte STA ( clear byte so that EOF reads as zero )
  ;&byte .File/read DEO2
  LIT &byte 00 ( <- this byte is patched by the two previous instructions! )
  RTN

~day18_lib.tal
