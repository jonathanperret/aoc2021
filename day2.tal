%EMIT { #18 DEO }
%SP { #20 EMIT }
%LF { #0a EMIT }
%DBGBYTE { DUP ;print-byte JSR2 LF }
%DBGSHORT { DUP2 ;print-short JSR2 LF }
%DBGSHORTDECn { DUP2 ;print-short-decimal JSR2 }
%DBGSHORTDEC { DBGSHORTDECn LF }
%DBGCHAR { DUP EMIT LF }

( devices )

|00 @System     [ &vector $2 &wst  $1 &rst    $1 &pad   $4 &r $2 &g $2 &b $2   &debug $1 &halt $1 ]
|10 @Console    [ &vector $2 &read $1 &pad    $5 &write $1 &error  $1 ]
|a0 @File       [ &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2 ]

( init )

|0100 @program

  ( load contents from file )
  #3000 .File/length DEO2
  ;filename .File/name DEO2
  ;contents .File/read DEO2

  ( .File/success DEI2 ;print-short JSR2 #0a EMIT )

  ;contents ( contents )

  &read-order

    LIT '- EMIT #0a EMIT

    ;read-byte JSR2 ( contents order-char )

    DUP #00 EQU ;&orders-done JCN2

    DUP EMIT SP

    #00 ;order STA2

    &skip-until-space
      ;read-byte JSR2
      #20 NEQ ,&skip-until-space JCN

    ;read-byte JSR2 ( contents digit )

    DBGCHAR

    #30 SUB #00 SWP ( contents digit-val )

    ;order LDA2 POP ( contents digit-val order-char )

    DUP LIT 'f NEQ ,&not-forward JCN
      POP
      LIT '> EMIT
      DUP2 ;position LDA2 ADD2 ( contents X position+X )
      DBGSHORTDECn SP
      ;position STA2 ( contents X )

      ;print-depth JSR2

      SP LIT '+ EMIT

      ;aim LDA2 ( contents X aim )
      MUL2 ( contents aim*X ) DBGSHORTDECn SP
      ;depth LDA2 ( contents aim*X depth )
      ADD2 ( contents depth+aim*X )
      ( contents newdepth )
      DUP2 #2710 ( newdepth newdepth 10000d )
      LTH2 ( newdepth newdepth<10k? ) ,&no-overflow JCN
        ;depth10k LDA2 INC2 ;depth10k STA2 ( newdepth )
        #2710 SUB2 ( newdepth-10k )
      &no-overflow ( newdepth%10k )
      ;depth STA2 ( contents )

      LIT '= EMIT ;print-depth JSR2 LF

      ,&order-done JMP

    &not-forward DUP LIT 'd NEQ ,&not-down JCN
      POP
      LIT 'v EMIT
      ;aim LDA2 ADD2 ( aim )
      DBGSHORTDEC
      ;aim STA2
      ,&order-done JMP

    &not-down
      POP
      LIT '^ EMIT
      ;aim LDA2 SWP2 SUB2 ( aim )
      DBGSHORTDEC
      ;aim STA2

    &order-done

    ;read-byte JSR2 ( lf ) POP

    ;&read-order JMP2

  &orders-done

  POP

  LIT 'p EMIT LIT '=' EMIT ;position LDA2 ;print-short-decimal JSR2 LF
  LIT 'd EMIT LIT '=' EMIT ;print-depth JSR2 LF
  LIT '* EMIT LIT '=' EMIT

  ;position LDA2 ;depth LDA2 MUL2 ;print-short-decimal JSR2 #0a EMIT

BRK

@read-byte
  DUP2 INC2 SWP2 ( contents+1 contents )
  LDA ( contents+1 next-byte )
  JMP2r

@print-depth
  ;depth10k LDA2 DUP2 #0000 EQU2 ,&no-10k JCN
    DUP2 ;print-short-decimal JSR2
  &no-10k
  POP2
  ;depth10k LDA2 #0000 NEQ2 .number/started STZ
  ;depth LDA2 ;print-short-decimal-low JSR2
  JMP2r

@print-short-decimal-low ( short -- )
	DUP2 #03e8 DIV2 DUP2 ,&digit JSR #03e8 MUL2 SUB2
	DUP2 #0064 DIV2 DUP2 ,&digit JSR #0064 MUL2 SUB2
	DUP2 #000a DIV2 DUP2 ,&digit JSR #000a MUL2 SUB2
	                     ,&digit JSR
	.number/started LDZ ,&end JCN
	LIT '0 .Console/write DEO
	&end
JMP2r

	&digit
	NIP
	DUP .number/started LDZ ORA #02 JCN
	POP JMP2r
	LIT '0 ADD .Console/write DEO
	#01 .number/started STZ
JMP2r

~library/console.lib.tal

@filename "day2.txt 00
@current-number 00 00
@order 00 00
@position 00 00
@depth 00 00
@depth10k 00 00
@aim 00 00
|8000
@contents
